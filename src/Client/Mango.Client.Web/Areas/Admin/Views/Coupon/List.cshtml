@model Result<IEnumerable<CouponVm>>

@{
    ViewData[Views.Title] = "List of all coupon exist";

    Layout = "_Layout";

    Html.SetHeaderTitle("Coupons");

    Html.SetBackRoute(IRoutes.DashboardCouponCreate);

    Html.SetBackRouteTitle("Add new");
}

@if (Model.IsSuccess)
{
    <table class="table">
        <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Code</th>
            <th scope="col">DiscountAmount</th>
            <th scope="col">MinimumAmount</th>
            <th scope="col"></th>
        </tr>
        </thead>
        <tbody>
        @foreach (CouponVm item in Model.Value)
        {
            <tr>
                <th scope="row">@item.Id</th>
                <td>@item.Code</td>
                <td>@item.DiscountAmount</td>
                <td>@item.MinimumAmount</td>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Action
                        </button>
                        <ul class="dropdown-menu">
                            <li>
                                <a class="dropdown-item" href="@Url.RouteUrl(routeName: IRoutes.DashboardCouponUpdate, values: new { id = item.Id } )">
                                    Update
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" href="@Url.RouteUrl(routeName: IRoutes.DashboardCouponDelete, values: new { id = item.Id } )">
                                    Delete
                                </a>
                            </li>
                        </ul>
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-danger" role="alert">
        <ol class="list-group list-group-numbered">
            @if (Model.Errors != null)
            {
                foreach (Error error in Model.Errors)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-start">
                        <div class="ms-2 me-auto">
                            <div class="fw-bold">@error.Code</div>
                            @error.Description
                        </div>
                    </li>
                }
            }
            else
            {
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        <div class="fw-bold">@Error.Unexpected.Code</div>
                        @Error.Unexpected.Description
                    </div>
                </li>
            }
        </ol>
    </div>
}